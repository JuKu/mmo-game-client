language: java
jdk: oraclejdk8
addons:
  apt:
    packages:
    - ldap-utils
    - slapd

#services:
#  - mysql

#before_install:
#  - mysql -e 'DROP DATABASE IF EXISTS my_test_database;'
#  - mysql -e 'CREATE DATABASE IF NOT EXISTS my_test_database;'

# https://github.com/pear/Net_LDAP2/blob/master/.travis.yml
#before_script:
#  - cat tests/ldapconfig.ini.dist | sed s/389/3389/ > tests/ldapconfig.ini
#  - mkdir /tmp/slapd
#  - slapd -f tests/ldif_data/slapd.conf -h ldap://localhost:3389 &
#  - sleep 3
#  - ldapadd -h localhost:3389 -D cn=admin,dc=example,dc=com -w test -f tests/ldif_data/base.ldif
#- ldapadd -h localhost:3389 -D cn=admin,dc=example,dc=com -w test -f tests/ldif_data/INITIAL_TESTDATA.ldif

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.sonar/cache
    - $HOME/.cache
    - $HOME/.m2

addons:
  sonarcloud:
    organization: "jukusoft"
    #jukusoft, juku-github

script:
  - mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
  - mvn clean verify
  - mvn clean install
  - java -jar codacy-coverage-reporter-4.0.0-assembly.jar report -l Java -r jacoco.xml
#  - mvn -e clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.login=${SONAR_TOKEN}
  - mvn cobertura:cobertura
#  - bash <(curl -s https://codecov.io/bash) --t ${CODEDOV_TOKEN}

after_success:
  - bash <(curl -s https://codecov.io/bash)

notifications:
email: false